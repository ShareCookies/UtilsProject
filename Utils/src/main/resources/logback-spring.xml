<?xml version="1.0" encoding="UTF-8"?>
<configuration  scan="true" scanPeriod="10 seconds">

    <springProperty name="log_dir" source="logging.file.path" />
    <property name="logformat_pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [Line:%L] [%thread] %-5level %logger{36}  -%msg%n"/>

    <!-- 普通日志 info.log （INFO、WARN、DEBUG） -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log_dir}/info.log</file>
        <!-- 循环政策：基于时间创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志命名:单个文件大于128MB 按照时间+自增i 生成log文件 -->
            <fileNamePattern>logs/info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>128MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 最大保存时间：30天-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <append>true</append>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${logformat_pattern}</pattern>
            <charset>utf-8</charset>
        </encoder>

        <!-- 此filter过滤debug级别以下的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
<!--        &lt;!&ndash;  级别过滤器，根据日志级别进行过滤。&ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>ERROR</level>-->
<!--            &lt;!&ndash;  表示不输出ERROR及以上日志&ndash;&gt;-->
<!--            <onMatch>DENY</onMatch>-->
<!--            &lt;!&ndash;  表示输出ERROR以下日志&ndash;&gt;-->
<!--            <onMismatch>ACCEPT</onMismatch>-->
<!--        </filter>-->
    </appender>
    <!-- 错误日志 error.log （error）-->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log_dir}/error.log</file>
        <!-- 循环政策：基于时间创建日志文件 -->
        <rollingPolicy  class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志命名:单个文件大于5MB 按照时间+自增i 生成log文件 -->
            <fileNamePattern>logs/error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>16MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 最大保存时间：180天-->
            <maxHistory>180</maxHistory>
        </rollingPolicy>
        <append>true</append>
        <!-- 日志格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${logformat_pattern}</pattern>
            <charset>utf-8</charset>
        </encoder>
        <!-- 日志级别过滤器 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>ERROR</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!-- 控制台日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志格式 -->
        <encoder>
            <pattern>${logformat_pattern}</pattern>
            <charset>utf-8</charset>
        </encoder>
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>
    <root level="ALL">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>

    <!-- 不同的业务逻辑日志打印到不同文件-->
    <appender name="customlog" class="ch.qos.logback.classic.sift.SiftingAppender">
        <!--discriminator鉴别器，设置运行时动态属性,siftingAppender根据这个属性来输出日志到不同文件 -->
        <discriminator>
            <key>logFileName</key>
            <defaultValue>unknown</defaultValue>
        </discriminator>
        <sift>
            <!--具体的写日志appender，每一个userId创建一个文件-->
            <appender name="FILE-${userId}" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <append>true</append>
                <encoder charset="UTF-8">
                    <pattern>${logformat_pattern}</pattern>
                </encoder>
                <file>${log_dir}/customlog/${logFileName}.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                    <!--定义文件滚动时的文件名的格式-->
                    <fileNamePattern>${log_dir}/customlog/${logFileName}-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
                    <maxFileSize>128MB</maxFileSize>
                    <maxHistory>30</maxHistory>
                </rollingPolicy>
            </appender>
        </sift>
    </appender>
    <logger name="customlog" additivity="false" level="INFO">
        <appender-ref ref="customlog"/>
    </logger>

</configuration>